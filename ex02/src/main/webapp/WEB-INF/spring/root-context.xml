<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	 <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
	 <property name="url" value="jdbc:mysql://127.0.0.1:3306/board" />
	 <property name="username" value="kuzuro" />
	 <property name="password" value="1111" />
	</bean>	
	
	<!-- SQLSession이라는 것을 만들어 내는 존재인데, 개발에서는 SQLSession을 통해서 Connection을 생성하거나 원하는 SQL을 전달하고, 결과를 리턴받는 구조로 작성하게 된다. -->
	<bean id="sqlSessionFactory"
	 class="org.mybatis.spring.SqlSessionFactoryBean">
	 <property name="dataSource" ref="dataSource" />
	 <property name="configLocation" value="classpath:/mybatis-config.xml" />
	 <property name="mapperLocations" value="classpath:mappers/**/*.xml" />
	</bean>
	
	<!-- 
	① SqlSessionFactoryBulider : 설정 정보 읽어서 SqlSessionFactory 만드는 역할
	② SqlSessionFactory : SqlSession을 만드는 역할
	③ SqlSession : 실제 sql을 날리는 역할
	④ sqlSessionTemplate : DB의 연결을 맺고 ,작업이 완료된후에 연결을 하는 close()하느 작업
	 -->
	
	<!--  데이터베이스와 연결을 맺고 , 작업이 완료된 후에 연결을 colse()하는작업 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
	 <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<!--  스프링에 빈으로 등록하기 -->
	<context:component-scan base-package="org.zerock.domain" />
	<context:component-scan base-package="org.zerock.persistence" />
	<context:component-scan base-package="org.zerock.service"/>
			
</beans>
